<beans:beans xmlns:beans="http://www.springframework.org/schema/beans"
             xmlns="http://www.springframework.org/schema/security"
             xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
             xsi:schemaLocation="http://www.springframework.org/schema/beans
             http://www.springframework.org/schema/beans/spring-beans.xsd
             http://www.springframework.org/schema/security
             http://www.springframework.org/schema/security/spring-security.xsd">

    <!--<debug />-->

    <global-method-security jsr250-annotations="enabled"
                            pre-post-annotations="enabled"
                            secured-annotations="enabled" />

    <http pattern="/static/**" security="none"/>

    <http auto-config="true" use-expressions="true" entry-point-ref="restAuthenticationEntryPoint" create-session="stateless">
        <intercept-url pattern="/api/**"
                       access="permitAll"/>

        <intercept-url pattern="/monitoring/**"
                       access="hasIpAddress('192.168.1.0/24')" />

        <form-login authentication-success-handler-ref="onLoginSuccessHandler"
                    authentication-failure-handler-ref="myFailureHandler"
                    username-parameter="mail"
                    password-parameter="password"
                />

        <logout logout-success-url="/"
                delete-cookies="JSESSIONID"
                invalidate-session="true" />

        <headers>
            <cache-control />
            <content-type-options />
            <hsts />
            <frame-options />
            <xss-protection />
        </headers>
    </http>

    <beans:bean id="myFailureHandler" class="org.springframework.security.web.authentication.SimpleUrlAuthenticationFailureHandler"/>
    <beans:bean id="onLoginSuccessHandler" class="com.receiptofi.mobile.security.OnLoginAuthenticationSuccessHandler" />

    <!-- Declare an authentication-manager to use a custom userDetailsService -->
    <authentication-manager>
        <authentication-provider user-service-ref="customUserDetailsService">
            <password-encoder ref="passwordEncoder"/>
        </authentication-provider>
    </authentication-manager>

    <!-- Use a BCrypt encoder since the user's passwords are stored as BCrypt in the database -->
    <beans:bean class="org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder" id="passwordEncoder"/>
</beans:beans>